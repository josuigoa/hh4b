name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true

jobs:

  create_release:
    name: Create release
    runs-on: windows-latest
    # Note this. We are going to use that in further jobs.
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.version }}
        release_name: Release ${{ github.event.inputs.version }}
        draft: false
        prerelease: false

  compile:
    name: Compile project
    runs-on: ubuntu-latest

    steps:

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install lix, haxe ${{ env.HAXE_VERSION }} and dependencies
      run: |
            npm i -g lix
            lix install haxe ${{ env.HAXE_VERSION }}
            lix download
    - name: Compile project
      run: haxe build.hxml
    
    - uses: pxshadow/setup-hashlink@v1.0.1

  
        
  release_assets:
    name: Release assets
    needs:
    - os_files
    - create_release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os-ideckia: 
          - ideckia-linux
          - ideckia-win
          - ideckia-macos
    steps:
    
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: ${{ matrix.os-ideckia }}
      
    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        # This is how it will be named on the release page. Put hatever name
        # you like, remember that they need to be different for each platform.
        # You can choose any build matrix parameters. For Rust I use the
        # target triple.
        asset_name: ${{ matrix.os-ideckia }}.zip
        # The path to the file you want to upload.
        asset_path: ${{ matrix.os-ideckia }}.zip
        # probably you will need to change it, but most likely you are
        # uploading a binary file
        asset_content_type: application/zip
